}
print(sumfunc(inp))
primeOrNot<-function(inp){
flag = TRUE
for(i in 1:inp ){
if(inp%%i==0){
flag = FALSE
}
}
}
primeOrNot(inp)
print(primeOrNot(inp))
primeOrNot<-function(inp){
flag = TRUE
for(i in 1:inp ){
if(inp%%i==0){
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(i in 2:inp ){
if(inp%%i==0){
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(i in 2:inp ){
if(inp%%i==0){
print(i)
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(i in 2:inp-1 ){
if(inp%%i==0){
print(i)
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:inp-1 ){
if(inp%%i==0){
print(i)
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:inp-1 ){
if(inp%%i==0){
print(i)
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:inp-1 ){
if(inp %% z == 0){
print(z)
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:inp-1 ){
if((inp %% z) == 0){
print(z)
flag = FALSE
break
}
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:inp-1 ){
if((inp %% z) == 0){
print(z)
flag = FALSE
break
}
print(z)
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:inp-1 ){
if((inp %% z) == 0){
print(z)
flag = FALSE
}
print(z)
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
primeOrNot<-function(inp){
flag = TRUE
for(z in 2:(inp-1) ){
if((inp %% z) == 0){
print(z)
flag = FALSE
}
print(z)
}
if(flag){
print(paste(inp,"is prime"))
}else{
print(paste(inp,"is not prime"))
}
}
primeOrNot(inp)
A <- matrix(1:6, nrow=2)
A
B<- matrix(1:6,ncol=2)
B
A%*%B
PL <- iris$Petal.Length
barplot(PL)
hist(PL)
SP <- iris$Species
boxplot(PL ~ SP)
summary(aov(PL ~ SP))
PW <- df$Petal.Width
plot(PL, PW, col = SP)
abline(lm(PW ~ PL))
PW <- iris$Petal.Width
plot(PL, PW, col = SP)
abline(lm(PW ~ PL))
heatmap(iris)
heatmap(ma,scale = "column",RowSideColors = rainbow(3)[iris$Species])
ma <- as.matrix(iris[, 1:4]) # convert to matrix
disMatarix <- dist(ma)
plot(hclust(disMatarix))
heatmap(ma,scale = "column",RowSideColors = rainbow(3)[iris$Species])
age <- c(23,23,27,27,39,41,49,50,52,54,54,56,57,58,58,60,61)
age <- c(23,23,27,27,39,41,49,50,52,54,54,56,57,58,58,60,61)
fatpercent <- c(9.5,26.5,7.8,17.8,31.4,25.9,27.4,27.2,31.2,34.6,42.5,28.8,33.4,30.2,34.1,32.9,41.2,35.7)
data <- list(A = age,B = fatpercent)
df <- as.data.frame(data)
data
age <- c(23,23,27,27,39,41,47,49,50,52,54,54,56,57,58,58,60,61)
fatpercent <- c(9.5,26.5,7.8,17.8,31.4,25.9,27.4,27.2,31.2,34.6,42.5,28.8,33.4,30.2,34.1,32.9,41.2,35.7)
data <- list(A = age,B = fatpercent)
data
df <- as.data.frame(data)
df
data <- list(Age = age,%fat = fatpercent)
data <- list(Age = age,FatPercent = fatpercent)
data
df <- as.data.frame(data)
df
cor(df)
cor(df$Age,df$FatPercent)
# Histogram
hist(iris$Petal.Length,breaks = 30,col="blue", xlab = "Petal Length", main = " Histogram of Pertal Length" )
qplot(Sepal.Length, data=iris, geom='histogram', fill=Species, alpha=I(1/2))
qplot(Sepal.Length, data=iris, geom='histogram', fill=Species, alpha=I(1/2))
# importing plotting lib
require(ggplot2)
# Density plot
qplot(Petal.Length, data=iris, geom='density')
qplot(Petal.Length, data=iris, geom='density', color=Species, fill=Species)
qplot(Sepal.Length, data=iris, geom='histogram', fill=Species, alpha=I(1/2))
# Density plot
qplot(Petal.Length, data=iris, geom='density')
qplot(Petal.Length, data=iris, geom='density', color=Species, fill=Species)
qplot(Petal.Width, Petal.Length, data=iris, color=Species)
# Scatter plot
qplot(Petal.Width, Petal.Length, data=iris, color=Species)
cor(iris$Sepal.Length, iris$Petal.Length)
cov(iris$Sepal.Length, iris$Petal.Length)
# correlation and covariance
cor(iris$Sepal.Length, iris$Petal.Length)
cov(iris$Sepal.Length, iris$Petal.Length)
cov(iris[,1:4])
df <- iris[, 1:4]
boxplot(df)
pairs(df)
stars(df)
# making every plot i know of ;)
df <- iris[, 1:4]
boxplot(df)
pairs(df)
stars(df)
boxplot(iris)
scatter.smooth(iris)
matrix(scatter.smooth(iris))
table(iris)
pie(table(iris))
matrix(scatter.smooth(iris))
matrix(scatter.smooth(iris))
scatter.smooth(iris)
matrix(scatter.smooth(iris))
table(iris)
table(iris)
pie(table(iris))
barplot(PL)
hist(PL)
SP <- iris$Species
boxplot(PL ~ SP)
summary(aov(PL ~ SP))
PW <- iris$Petal.Width
plot(PL, PW, col = SP)
abline(lm(PW ~ PL))
ma <- as.matrix(iris[, 1:4]) # convert to matrix
disMatarix <- dist(ma)
plot(hclust(disMatarix))
heatmap(ma,scale = "column",RowSideColors = rainbow(3)[iris$Species])
plot(hclust(disMatarix))
heatmap(ma,scale = "column",RowSideColors = rainbow(3)[iris$Species])
# Find all the files on
# https://github.com/Abhijit25Mishra/R-Lab--ICS-321-
# https://rpubs.com/Panda_250
print("Abhijit Mishra")
# setting the working directory to use the csv file
print(getwd())
setwd("C:/Users/ASUS/OneDrive/Desktop/Study-Material/IIIT-Kottayam/SEM-6/Data warehousing and mining ICS 321/Lab/Lab-5")
# reading the csv file
sdata <- read.csv("Dataset.csv")
# reading the csv file
sdata <- read.csv("Sampledata_L6.csv")
head(sdata)
which(is.na(sdata))
View(sdata)
sapply(sdata, class)
str(sdata)
summary(sdata)
ncol(sdata)
nrow(sdata)
lapply(sdata,summary)
dim(sdata)
df<-data.frame(head(sdata,10))
df
names(df)
library(dplyr)
View(sdata)
names(df)
rename(df,Employeeno = How.many.employees.does.your.company.or.organization.have)
rename(df,Employeeno = How.many.employees.does.your.company.or.organization.have.)
names(df)
view(df)
view(df)
View(df)
rename(df, How.many.employees.does.your.company.or.organization.have. = Employeeno)
rename(df, How.many.employees.does.your.company.or.organization.have = Employeeno)
df = rename(df,Employeeno = How.many.employees.does.your.company.or.organization.have.)
View(df)
str(df)
# making a dataframe with only the first 10 elements in the given dataset
df1<-data.frame(head(sdata,10))
names(df1)
df1 = rename(df1,Employeeno = How.many.employees.does.your.company.or.organization.have.)
View(df1)
str(df1)
df1$Are.you.self.employed. <- as.character(df1$Are.you.self.employed.)
df1$Are.you.self.employed.[df1$Are.you.self.employed.=="1"] <- "YES" #replace 1 with YES
df1$Are.you.self.employed.[df1$Are.you.self.employed.=="0"] <- "NO" #replace 0 with NO
df1$Is.your.employer.primarily.a.tech.company.organization. <- as.character(df1$Is.your.employer.primarily.a.tech.company.organization.)
df1$Is.your.employer.primarily.a.tech.company.organization.[df1$Is.your.employer.primarily.a.tech.company.organization.=="1"] <- "YES" #replace 1 with YES
df1$Is.your.employer.primarily.a.tech.company.organization.[df1$Is.your.employer.primarily.a.tech.company.organization.=="0"] <- "NO" #replace 0 with NO
df1$Is.your.primary.role.within.your.company.related.to.tech.IT. <- as.character(df1$Is.your.primary.role.within.your.company.related.to.tech.IT.)
df1$Is.your.primary.role.within.your.company.related.to.tech.IT.[df1$Is.your.primary.role.within.your.company.related.to.tech.IT.=="1"] <- "YES" #replace 1 with YES
sapply(df1, class)
df1
df1 <- df[1:50, c("What.is.your.gender.")]
unique(df[1:50, c("What.is.your.gender.")])
df1 <- gsub("I identify as female", "Female", df1)
df1 <- gsub("Bigender", "Male", df1)
df1 <- gsub("non-binary", "Male", df1)
df1 <- gsub("Female assigned at birth", "Female", df1)
df1 <- gsub("(?i)F | (?i)Female", "1", df1)
df1 <- gsub("(?i)M | (?i)Male", "0", df1)
df1 <- gsub("1", "Female", df1)
df1 <- gsub("0", "Male", df1)
df1
#Finding Missing values and replacing them with NA
df2 <- df[1:10, c(1:10)]
df2[df2==''] <- NA
df2
sum(is.na(df2))
df2 <- df[1:30, c("Are.you.self.employed.",
"Is.your.employer.primarily.a.tech.company.organization.",
"Is.your.primary.role.within.your.company.related.to.tech.IT.",
"What.is.your.age.")]
print("Null Values before modification")
sum(is.na(df2))
df2[is.na(df2)] <- 0
print("Null values after modification")
sum(is.na(df2))
df2
age <- df2$What.is.your.age.
hist(age, col="grey")
boxplot(df2$What.is.your.age.)
df1 = rename(df1,Employeeno = How.many.employees.does.your.company.or.organization.have)
names(df1)
df1 = rename(df1,Employeeno = How.many.employees.does.your.company.or.organization.have)
# making a dataframe with only the first 10 elements in the given dataset
df1<-data.frame(head(sdata,10))
names(df1)
df1 = rename(df1,Employeeno = How.many.employees.does.your.company.or.organization.have)
names(df1)
df1 = rename(df1,Employeeno = How.many.employees.does.your.company.or.organization.have.)
View(df1)
str(df1)
df1$Are.you.self.employed. <- as.character(df1$Are.you.self.employed.)
df1$Are.you.self.employed.[df1$Are.you.self.employed.=="1"] <- "YES" #replace 1 with YES
df1$Are.you.self.employed.[df1$Are.you.self.employed.=="0"] <- "NO" #replace 0 with NO
df1$Is.your.employer.primarily.a.tech.company.organization. <- as.character(df1$Is.your.employer.primarily.a.tech.company.organization.)
df1$Is.your.employer.primarily.a.tech.company.organization.[df1$Is.your.employer.primarily.a.tech.company.organization.=="1"] <- "YES" #replace 1 with YES
df1$Is.your.employer.primarily.a.tech.company.organization.[df1$Is.your.employer.primarily.a.tech.company.organization.=="0"] <- "NO" #replace 0 with NO
df1$Is.your.primary.role.within.your.company.related.to.tech.IT. <- as.character(df1$Is.your.primary.role.within.your.company.related.to.tech.IT.)
df1$Is.your.primary.role.within.your.company.related.to.tech.IT.[df1$Is.your.primary.role.within.your.company.related.to.tech.IT.=="1"] <- "YES" #replace 1 with YES
sapply(df1, class)
df1
df1 <- df[1:50, c("What.is.your.gender.")]
unique(df[1:50, c("What.is.your.gender.")])
df1 <- gsub("I identify as female", "Female", df1)
df1 <- gsub("Bigender", "Male", df1)
df1 <- gsub("non-binary", "Male", df1)
df1 <- gsub("Female assigned at birth", "Female", df1)
df1 <- gsub("(?i)F | (?i)Female", "1", df1)
df1 <- gsub("(?i)M | (?i)Male", "0", df1)
df1 <- gsub("1", "Female", df1)
df1 <- gsub("0", "Male", df1)
df1
#Finding Missing values and replacing them with NA
df2 <- df[1:10, c(1:10)]
df2[df2==''] <- NA
df2
sum(is.na(df2))
df2 <- df[1:30, c("Are.you.self.employed.",
"Is.your.employer.primarily.a.tech.company.organization.",
"Is.your.primary.role.within.your.company.related.to.tech.IT.",
"What.is.your.age.")]
print("Null Values before modification")
sum(is.na(df2))
df2[is.na(df2)] <- 0
print("Null values after modification")
sum(is.na(df2))
df2
age <- df2$What.is.your.age.
hist(age, col="grey")
boxplot(df2$What.is.your.age.)
# setting the working directory to use the csv file
print(getwd())
setwd("C:/Users/ASUS/OneDrive/Desktop/Study-Material/IIIT-Kottayam/SEM-6/Data warehousing and mining ICS 321/Lab/Lab-5")
# reading the csv file
sdata <- read.csv("Sampledata_L6.csv")
# Familizare with the data
head(sdata)
which(is.na(sdata))
# setting the working directory to use the csv file
print(getwd())
setwd("C:/Users/ASUS/OneDrive/Desktop/Study-Material/IIIT-Kottayam/SEM-6/Data warehousing and mining ICS 321/Lab/Lab-5")
# reading the csv file
sdata <- read.csv("Sampledata_L6.csv")
# Familizare with the data
head(sdata)
which(is.na(sdata))
View(sdata)
# summary of data and num of rows and col and summary of ever col
sapply(sdata, class)
# summary of data and num of rows and col and summary of ever col
sapply(sdata, class)
dim(sdata)
summary(sdata)
ncol(sdata)
nrow(sdata)
summary(sdata)
lapply(sdata,summary)
ncol(sdata)
nrow(sdata)
lapply(sdata,summary)
# making a dataframe with only the first 10 elements in the given dataset
df1<-data.frame(head(sdata,10))
names(df1)
(df1)
View(df1)
df1 = rename(df1,Employeeno = How.many.employees.does.your.company.or.organization.have.)
View(df1)
str(df1)
names(df1)
df1$Are.you.self.employed. <- as.character(df1$Are.you.self.employed.)
df1$Are.you.self.employed.[df1$Are.you.self.employed.=="1"] <- "YES" #replace 1 with YES
df1$Are.you.self.employed.[df1$Are.you.self.employed.=="0"] <- "NO" #replace 0 with NO
df1$Is.your.employer.primarily.a.tech.company.organization. <- as.character(df1$Is.your.employer.primarily.a.tech.company.organization.)
df1$Is.your.employer.primarily.a.tech.company.organization.[df1$Is.your.employer.primarily.a.tech.company.organization.=="1"] <- "YES" #replace 1 with YES
df1$Is.your.employer.primarily.a.tech.company.organization.[df1$Is.your.employer.primarily.a.tech.company.organization.=="0"] <- "NO" #replace 0 with NO
df1$Is.your.primary.role.within.your.company.related.to.tech.IT. <- as.character(df1$Is.your.primary.role.within.your.company.related.to.tech.IT.)
df1$Is.your.primary.role.within.your.company.related.to.tech.IT.[df1$Is.your.primary.role.within.your.company.related.to.tech.IT.=="1"] <- "YES" #replace 1 with YES
sapply(df1, class)
df1
df1 <- df[1:50, c("What.is.your.gender.")]
unique(df[1:50, c("What.is.your.gender.")])
df1 <- gsub("I identify as female", "Female", df1)
df1 <- gsub("Bigender", "Male", df1)
df1 <- gsub("non-binary", "Male", df1)
df1 <- gsub("Female assigned at birth", "Female", df1)
df1 <- gsub("(?i)F | (?i)Female", "1", df1)
df1 <- gsub("(?i)M | (?i)Male", "0", df1)
df1 <- gsub("1", "Female", df1)
df1 <- gsub("0", "Male", df1)
df1
#Finding Missing values and replacing them with NA
df2 <- df[1:10, c(1:10)]
df2[df2==''] <- NA
df2
sum(is.na(df2))
df2 <- df[1:30, c("Are.you.self.employed.",
"Is.your.employer.primarily.a.tech.company.organization.",
"Is.your.primary.role.within.your.company.related.to.tech.IT.",
"What.is.your.age.")]
print("Null Values before modification")
sum(is.na(df2))
df2[is.na(df2)] <- 0
print("Null values after modification")
sum(is.na(df2))
df2
age <- df2$What.is.your.age.
hist(age, col="grey")
boxplot(df2$What.is.your.age.)
df2
df1
View(df1)
View(head(df ,10))
df3<-head(df ,10)
df3<-head(df$If.yes..what.condition.s..have.you.been.diagnosed.with. ,10)
df3
df4<-head(df$If.maybe..what.condition.s..do.you.believe.you.have.,10)
df4
boxplot((df3))
boxplot(df3)
boxplot(count(unique(df3 )))
boxplot(unique(df3 ))
boxplot(unique(df4))
